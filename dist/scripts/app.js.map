{
  "version": 3,
  "sources": ["../../src/scripts/modules/sidenav/sidenav.js", "../../src/scripts/modules/sidenav/index.js", "../../src/scripts/modules/dialog/dialog.js", "../../src/scripts/modules/dialog/index.js", "../../src/scripts/modules/scroll-to-top-button/scroll-to-top-button.js", "../../src/scripts/modules/scroll-to-top-button/index.js", "../../src/scripts/modules/company-services/company-services.js", "../../src/scripts/modules/company-services/index.js", "../../src/scripts/app.js"],
  "sourcesContent": ["/**\n * Sidenav Class\n * Handles the instance of an existing sidenav.\n */\nclass Sidenav {\n  // the instance of the document's element\n  #documentEl;\n\n  // the instance of the body's element\n  #bodyEl;\n\n  // the instance of the sidenav's element\n  #el;\n\n  // the button and close button elements\n  #openEl;\n\n  #closeEl;\n\n  // the state of the sidenav\n  #isOpened = false;\n\n  constructor(documentEl, bodyEl, sidenavID) {\n    // init the instance of the document element\n    this.#documentEl = documentEl;\n\n    // init the body\n    this.#bodyEl = bodyEl;\n\n    // init the main el and subscribes to clicks within the parent\n    this.#el = document.getElementById(sidenavID);\n    this.#el.addEventListener('click', (e) => this.#onElementClick(e));\n\n    // initialize the button instances\n    this.#openEl = document.getElementById(`${sidenavID}Open`);\n    this.#closeEl = document.getElementById(`${sidenavID}Close`);\n\n    // subscribe to the click actions\n    this.#openEl.addEventListener('click', () => this.open());\n    this.#closeEl.addEventListener('click', () => this.close());\n\n    // subscribe to keyboard actions and close the sidenav when escape is pressed\n    this.#documentEl.addEventListener('keyup', (e) => this.#onKeyboardClickUp(e));\n  }\n\n\n\n\n\n  /* *********\n   * Getters *\n   ********* */\n\n  get isOpened() {\n    return this.#isOpened;\n  }\n\n\n\n\n\n  /* ******************************\n   * ELEMENT/KEYBOARD CLICK EVENT *\n   ****************************** */\n\n  /**\n   * Triggers whenever the sidenav element is clicked on and closes the sidenav if:\n   * - the background is clicked\n   * - a nav link is clicked\n   * @param {*} e\n   */\n  #onElementClick(e) {\n    if (\n      e.target.id === this.#el.id\n      || e.target instanceof HTMLAnchorElement\n      || e.target.parentNode instanceof HTMLAnchorElement\n    ) {\n      this.close();\n    }\n  }\n\n  /**\n   * Triggers whenever a keyup event is emitted. The sidenav is closed if the escape key is pressed.\n   * @param {*} e\n   */\n  #onKeyboardClickUp(e) {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  }\n\n\n\n\n\n  /* *************\n   * Controllers *\n   ************* */\n\n  /**\n   * Opens the sidenav if it isn't already opened.\n   */\n  open() {\n    if (!this.#isOpened) {\n      this.#bodyEl.style['overflow-y'] = 'hidden';\n      this.#el.style.display = 'flex';\n      this.#isOpened = true;\n    }\n  }\n\n  /**\n   * Closed the sidenav in case it is opened.\n   */\n  close() {\n    if (this.#isOpened) {\n      this.#bodyEl.style['overflow-y'] = 'scroll';\n      this.#el.style.display = 'none';\n      this.#isOpened = false;\n    }\n  }\n}\n\n\n\n\n/**\n * Module Exports\n */\nexport default Sidenav;\n", "import Sidenav from './sidenav';\n\nexport default Sidenav;\n", "/**\n * Dialog Class\n * Handles the dialog instances within the website.\n */\nclass Dialog {\n  // the instance of the body's element\n  #bodyEl;\n\n  // the instance of the dialog element as well as its contents\n  #el;\n\n  #titleEl;\n\n  #closeEl;\n\n  #contentEl;\n\n  constructor(bodyEl, elementID) {\n    // init the body's element\n    this.#bodyEl = bodyEl;\n\n    // init the dialog element and its contents\n    this.#el = document.getElementById(elementID);\n    this.#titleEl = document.getElementById(`${elementID}Title`);\n    this.#closeEl = document.getElementById(`${elementID}Close`);\n    this.#contentEl = document.getElementById(`${elementID}Content`);\n\n    // Subscribe to the close button clicks\n    this.#closeEl.addEventListener('click', () => this.close());\n\n    // Subscribe to the open & close actions\n    this.#el.addEventListener('close', () => this.#onDialogClose());\n  }\n\n  /**\n   * Builds and displays the modal based on the given content.\n   * @param {*} title\n   * @param {*} htmlContent\n   */\n  show(title, htmlContent) {\n    this.#bodyEl.style['overflow-y'] = 'hidden';\n    this.#titleEl.innerText = title;\n    this.#contentEl.innerHTML = htmlContent;\n    this.#el.showModal();\n  }\n\n  /**\n   * Resets the content and closes the dialog.\n   */\n  close() {\n    this.#el.close();\n    this.#titleEl.innerText = '';\n    this.#contentEl.innerHTML = '';\n  }\n\n  /**\n   * Triggers whenever the dialog is closed. Takes care of renabling the scrolling functionality to\n   * the body\n   */\n  #onDialogClose() {\n    this.#bodyEl.style['overflow-y'] = 'scroll';\n  }\n}\n\n\n\n\n/**\n * Module Exports\n */\nexport default Dialog;\n", "import Dialog from './dialog';\n\nexport default Dialog;\n", "/**\n * ScrollToTopButton Class\n * Handles the instance of the button element that takes care of the scrolling back to top\n */\nclass ScrollToTopButton {\n  // the instance of the document's element\n  #documentEl;\n\n  // the instance of the button's element\n  #el;\n\n  constructor(documentEl, buttonID) {\n    // init the instance of the document element\n    this.#documentEl = documentEl;\n\n    // init the instance button element and subscribe to its clicks\n    this.#el = document.getElementById(buttonID);\n    this.#el.addEventListener('click', () => this.scrollToTop());\n\n    // subscribe to the scroll and handle events\n    document.addEventListener('scroll', () => this.#onScrollChanges());\n  }\n\n  /**\n   * Triggers whenever the user scrolls on the page and determines if the button should be displayed\n   * or hidden.\n   */\n  #onScrollChanges() {\n    this.#el.style.display = this.#documentEl.scrollTop > 400 ? 'flex' : 'none';\n  }\n\n  /**\n   * Scrolls the window back to the top of the app.\n   */\n  scrollToTop() {\n    this.#documentEl.scrollTop = 0;\n  }\n}\n\n\n\n\n/**\n * Module Exports\n */\nexport default ScrollToTopButton;\n", "import ScrollToTopButton from './scroll-to-top-button';\n\nexport default ScrollToTopButton;\n", "/**\n * Company Services Class\n * Handles the actions that can be performed in the services section. Including the display of\n * informational dialogs.\n */\nclass CompanyServices {\n  // the instance of the dialog class\n  #dialog;\n\n  // the instance of the container's element\n  #el;\n\n  // the name of the attribute used to identify what dialogs to display\n  #dataDialogAttributeName;\n\n  constructor(dialog, servicesContainerID, dataDialogAttributeName) {\n    // init the dialog instance\n    this.#dialog = dialog;\n\n    // init the main el and subscribes to clicks within the parent\n    this.#el = document.getElementById(servicesContainerID);\n    this.#el.addEventListener('click', (e) => this.#onContainerElementClick(e));\n\n    // init the attribute name for the dialog ids\n    this.#dataDialogAttributeName = dataDialogAttributeName;\n  }\n\n\n\n\n  /* *****************\n   * DIALOG HANDLERS *\n   ***************** */\n\n  /**\n   * Triggers when the \"More info\" button in a service card is clicked. Identifies which button\n   * was clicked and displays the appropriate dialog.\n   * @param {*} e\n   */\n  #onContainerElementClick(e) {\n    // extract the data dialog attribute\n    const dataDialog = e.target.getAttribute(this.#dataDialogAttributeName);\n\n    // proceed only if a truthy value that matches an actual dialog was extracted\n    if (dataDialog === 'lessons') {\n      this.#displayLessonsDialog();\n    } else if (dataDialog === 'rent') {\n      this.#displayRentDialog();\n    } else if (dataDialog === 'accomodation') {\n      this.#displayAccomodationDialog();\n    }\n  }\n\n  // Lessons Dialog\n  #displayLessonsDialog() {\n    this.#dialog.show('Clases de Kiteboarding', `\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n    `);\n  }\n\n  // Rent Dialog\n  #displayRentDialog() {\n    this.#dialog.show('Alquiler de Equipos', `\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n    `);\n  }\n\n  // Accomodation Dialog\n  #displayAccomodationDialog() {\n    this.#dialog.show('Estad\u00EDa', `\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Temporibus amet quidem debitis ad dolorum? Ipsum non pariatur maiores. Quod nobis aliquid aspernatur odit repudiandae omnis ab eius ut vel impedit?\n      </p>\n    `);\n  }\n}\n\n\n\n\n/**\n * Module Exports\n */\nexport default CompanyServices;\n", "import CompanyServices from './company-services';\n\nexport default CompanyServices;\n", "import Sidenav from './modules/sidenav';\nimport Dialog from './modules/dialog';\nimport ScrollToTopButton from './modules/scroll-to-top-button';\nimport CompanyServices from './modules/company-services';\n\n/**\n * App Class\n * The entry point of the application that instantiates all the essential modules.\n */\nclass App {\n  // the instance of the document's element\n  #documentEl;\n\n  // the instance of the body's element\n  #bodyEl;\n\n  // the instance of the app container's element\n  #appContainerEl;\n\n  // the instance of the mobile sidenav\n  #mobileSidenav;\n\n  // the instance of the dialog\n  #dialog;\n\n  // the instance of the scroll to top button\n  #scrollToTop;\n\n  // the instance of the company services\n  #companyServices;\n\n  constructor() {\n    // init the instance of the document's element\n    this.#documentEl = document.documentElement;\n\n    // init the instance of the body's element\n    this.#bodyEl = document.body;\n\n    // init the instance of the app's container element\n    this.#appContainerEl = document.getElementById('appContainer');\n\n    // init the instance of the mobile sidenav\n    this.#mobileSidenav = new Sidenav(this.#documentEl, this.#bodyEl, 'mobileSidenav');\n\n    // init the instance of the dialog\n    this.#dialog = new Dialog(this.#bodyEl, 'dialog');\n\n    // init the instance of the scroll to top button\n    this.#scrollToTop = new ScrollToTopButton(this.#documentEl, 'scrollToTopButton');\n\n    // init the instance of the company services\n    this.#companyServices = new CompanyServices(this.#dialog, 'services', 'data-dialog-id');\n\n    // Set the current year on the footer\n    document.getElementById('currentYear').innerText = new Date().getFullYear();\n  }\n}\n\n\n\n\n\n/**\n * App Init\n * The app is initialized once it has been fully instantiated.\n */\n// eslint-disable-next-line no-unused-vars\nconst app = new App();\n"],
  "mappings": "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",
  "names": ["sidenav_default", "dialog_default", "scroll_to_top_button_default", "company_services_default", "sidenav_default", "dialog_default", "scroll_to_top_button_default", "company_services_default"]
}
